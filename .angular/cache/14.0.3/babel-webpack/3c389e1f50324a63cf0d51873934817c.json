{"ast":null,"code":"import { NavigationStart } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let AlertService = /*#__PURE__*/(() => {\n  class AlertService {\n    constructor(router) {\n      this.router = router;\n      this.subject = new Subject();\n      this.keepAfterNavigationChange = false;\n      router.events.subscribe(event => {\n        if (event instanceof NavigationStart) {\n          if (this.keepAfterNavigationChange) {\n            this.keepAfterNavigationChange = false;\n          } else {\n            this.subject.next(void 0);\n          }\n        }\n      });\n    }\n\n    success(message, keepAfterNavigationChange = false) {\n      this.keepAfterNavigationChange = keepAfterNavigationChange;\n      this.subject.next({\n        type: 'success',\n        text: message\n      });\n    }\n\n    error(message, keepAfterNavigationChange = false) {\n      this.keepAfterNavigationChange = keepAfterNavigationChange;\n      this.subject.next({\n        type: 'error',\n        text: message\n      });\n    }\n\n    getMessage() {\n      return this.subject.asObservable();\n    }\n\n  }\n\n  AlertService.ɵfac = function AlertService_Factory(t) {\n    return new (t || AlertService)(i0.ɵɵinject(i1.Router));\n  };\n\n  AlertService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AlertService,\n    factory: AlertService.ɵfac,\n    providedIn: 'root'\n  });\n  return AlertService;\n})();","map":null,"metadata":{},"sourceType":"module"}